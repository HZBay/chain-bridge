// Code generated by "make swagger"; DO NOT EDIT.
package account

import (
	"net/http"

	"github.com/hzbay/chain-bridge/internal/api"
	"github.com/hzbay/chain-bridge/internal/types/cpop"
	"github.com/hzbay/chain-bridge/internal/util"
	"github.com/labstack/echo/v4"
)

// GetUserAccountRoute creates the route for getting user account information
func GetUserAccountRoute(s *api.Server) *echo.Route {
	return s.Router.APIV1Account.GET("/:user_id", getUserAccountHandler(s))
}

// getUserAccountHandler handles GET /account/{user_id} requests
func getUserAccountHandler(s *api.Server) echo.HandlerFunc {
	return func(c echo.Context) error {
		ctx := c.Request().Context()
		log := util.LogFromContext(ctx)

		// Parse and validate parameters
		params := cpop.NewGetUserAccountParams()
		if err := util.BindAndValidatePathParams(c, &params); err != nil {
			log.Debug().Err(err).Msg("Failed to bind request parameters")
			return err
		}

		// Call account service
		accountResponse, err := s.AccountService.GetUserAccounts(ctx, params.UserID)
		if err != nil {
			log.Error().Err(err).Str("user_id", params.UserID).Msg("Failed to get user accounts")
			return err
		}

		return util.ValidateAndReturn(c, http.StatusOK, accountResponse)
	}
}
