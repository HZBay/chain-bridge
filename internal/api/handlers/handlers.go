// Code generated by go run -tags scripts scripts/handlers/gen_handlers.go; DO NOT EDIT.
package handlers

import (
	"github.com/hzbay/chain-bridge/internal/api"
	"github.com/hzbay/chain-bridge/internal/api/handlers/account"
	"github.com/hzbay/chain-bridge/internal/api/handlers/assets"
	"github.com/hzbay/chain-bridge/internal/api/handlers/auth"
	"github.com/hzbay/chain-bridge/internal/api/handlers/batch"
	"github.com/hzbay/chain-bridge/internal/api/handlers/chains"
	"github.com/hzbay/chain-bridge/internal/api/handlers/common"
	"github.com/hzbay/chain-bridge/internal/api/handlers/monitoring"
	"github.com/hzbay/chain-bridge/internal/api/handlers/nft"
	"github.com/hzbay/chain-bridge/internal/api/handlers/push"
	"github.com/hzbay/chain-bridge/internal/api/handlers/tokens"
	"github.com/hzbay/chain-bridge/internal/api/handlers/transfer"
	"github.com/labstack/echo/v4"
)

func AttachAllRoutes(s *api.Server) {
	// attach our routes
	s.Router.Routes = []*echo.Route{
		account.GetUserAccountRoute(s),
		account.PostCreateUserAccountRoute(s),
		account.PostDeployUserAccountRoute(s),
		assets.GetUserAssetsRoute(s),
		assets.PostAdjustAssetsRoute(s),
		auth.DeleteUserAccountRoute(s),
		auth.GetUserInfoRoute(s),
		auth.PostChangePasswordRoute(s),
		auth.PostForgotPasswordCompleteRoute(s),
		auth.PostForgotPasswordRoute(s),
		auth.PostLoginRoute(s),
		auth.PostLogoutRoute(s),
		auth.PostRefreshRoute(s),
		auth.PostRegisterRoute(s),
		batch.GetBatchStatusRoute(s),
		chains.DeleteChainRoute(s),
		chains.GetChainConfigRoute(s),
		chains.GetChainsRoute(s),
		chains.PostChainsRefreshCacheRoute(s),
		chains.PostCreateChainRoute(s),
		chains.PutChainBatchConfigRoute(s),
		chains.PutToggleChainStatusRoute(s),
		chains.PutUpdateChainRoute(s),
		common.GetHealthyRoute(s),
		common.GetReadyRoute(s),
		common.GetSwaggerRoute(s),
		common.GetVersionRoute(s),
		monitoring.GetBatchOptimizationRoute(s),
		monitoring.GetPaymentEventsStatsRoute(s),
		monitoring.GetQueueHealthRoute(s),
		monitoring.GetQueueMetricsRoute(s),
		monitoring.GetQueueStatsRoute(s),
		monitoring.PostReloadPaymentEventsConfigRoute(s),
		nft.PostBatchBurnNFTsRoute(s),
		nft.PostBatchMintNFTsRoute(s),
		push.PutUpdatePushTokenRoute(s),
		tokens.DeleteTokenRoute(s),
		tokens.GetTokenRoute(s),
		tokens.GetTokensByChainRoute(s),
		tokens.GetTokensRoute(s),
		tokens.PostCreateTokenRoute(s),
		tokens.PostTokensRefreshCacheRoute(s),
		tokens.PutTokenRoute(s),
		tokens.PutTokenStatusRoute(s),
		transfer.GetUserTransactionsRoute(s),
		transfer.PostTransferAssetsRoute(s),
	}
}
