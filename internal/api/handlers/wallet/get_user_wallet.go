// Code generated by "make swagger"; DO NOT EDIT.
package wallet

import (
	"net/http"

	"github.com/hzbay/chain-bridge/internal/api"
	"github.com/hzbay/chain-bridge/internal/types/cpop"
	"github.com/hzbay/chain-bridge/internal/util"
	"github.com/labstack/echo/v4"
)

// GetUserWalletRoute creates the route for getting user wallet information
func GetUserWalletRoute(s *api.Server) *echo.Route {
	return s.Router.APIV1Auth.GET("/wallet/:user_id", getUserWalletHandler(s))
}

// getUserWalletHandler handles GET /wallet/{user_id} requests
func getUserWalletHandler(s *api.Server) echo.HandlerFunc {
	return func(c echo.Context) error {
		ctx := c.Request().Context()
		log := util.LogFromContext(ctx)

		// Parse and validate parameters
		params := cpop.NewGetUserWalletParams()
		if err := params.BindRequest(c.Request(), nil); err != nil {
			log.Debug().Err(err).Msg("Failed to bind request parameters")
			return err
		}

		// Call wallet service
		walletResponse, err := s.WalletService.GetUserWallets(ctx, params.UserID)
		if err != nil {
			log.Error().Err(err).Str("user_id", params.UserID).Msg("Failed to get user wallets")
			return err
		}

		return util.ValidateAndReturn(c, http.StatusOK, walletResponse)
	}
}
