// Code generated by go-swagger; DO NOT EDIT.

package batch

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
)

// NewGetBatchStatusParams creates a new GetBatchStatusParams object
// no default values defined in spec.
func NewGetBatchStatusParams() GetBatchStatusParams {

	return GetBatchStatusParams{}
}

// GetBatchStatusParams contains all the bound params for the get batch status operation
// typically these are obtained from a http.Request
//
// swagger:parameters getBatchStatus
type GetBatchStatusParams struct {

	// HTTP Request Object
	HTTPRequest *http.Request `json:"-"`

	/*Batch identifier
	  Required: true
	  In: path
	*/
	BatchID string `param:"batch_id"`
}

// BindRequest both binds and validates a request, it assumes that complex things implement a Validatable(strfmt.Registry) error interface
// for simple values it will use straight method calls.
//
// To ensure default values, the struct must have been initialized with NewGetBatchStatusParams() beforehand.
func (o *GetBatchStatusParams) BindRequest(r *http.Request, route *middleware.MatchedRoute) error {
	var res []error

	o.HTTPRequest = r

	rBatchID, rhkBatchID, _ := route.Params.GetOK("batch_id")
	if err := o.bindBatchID(rBatchID, rhkBatchID, route.Formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetBatchStatusParams) Validate(formats strfmt.Registry) error {
	var res []error

	// batch_id
	// Required: true
	// Parameter is provided by construction from the route

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindBatchID binds and validates parameter BatchID from path.
func (o *GetBatchStatusParams) bindBatchID(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: true
	// Parameter is provided by construction from the route

	o.BatchID = raw

	return nil
}
