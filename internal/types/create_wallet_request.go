// Code generated by go-swagger; DO NOT EDIT.

package types

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreateWalletRequest create wallet request
//
// swagger:model createWalletRequest
type CreateWalletRequest struct {

	// Target chain ID
	// Example: 56
	// Required: true
	ChainID *int64 `json:"chain_id"`

	// Owner EOA address
	// Example: 0x1234567890123456789012345678901234567890
	// Required: true
	OwnerAddress *string `json:"owner_address"`
}

// Validate validates this create wallet request
func (m *CreateWalletRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateChainID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOwnerAddress(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateWalletRequest) validateChainID(formats strfmt.Registry) error {

	if err := validate.Required("chain_id", "body", m.ChainID); err != nil {
		return err
	}

	return nil
}

func (m *CreateWalletRequest) validateOwnerAddress(formats strfmt.Registry) error {

	if err := validate.Required("owner_address", "body", m.OwnerAddress); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this create wallet request based on context it is used
func (m *CreateWalletRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CreateWalletRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreateWalletRequest) UnmarshalBinary(b []byte) error {
	var res CreateWalletRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
