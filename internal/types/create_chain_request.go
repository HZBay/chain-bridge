// Code generated by go-swagger; DO NOT EDIT.

package types

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreateChainRequest create chain request
//
// swagger:model createChainRequest
type CreateChainRequest struct {

	// Account manager contract address
	// Example: 0xabcdefabcdefabcdefabcdefabcdefabcdefabcd
	AccountManagerAddress string `json:"account_manager_address,omitempty"`

	// Chain ID
	// Example: 11155111
	// Required: true
	ChainID *int64 `json:"chain_id"`

	// CPOP token contract address
	// Example: 0x1234567890123456789012345678901234567890
	CpopTokenAddress string `json:"cpop_token_address,omitempty"`

	// EntryPoint contract address
	// Example: 0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789
	EntryPointAddress string `json:"entry_point_address,omitempty"`

	// Block explorer URL
	// Example: https://sepolia.etherscan.io
	ExplorerURL string `json:"explorer_url,omitempty"`

	// Whether chain is enabled
	// Example: true
	IsEnabled bool `json:"is_enabled,omitempty"`

	// Master aggregator contract address
	// Example: 0x0987654321098765432109876543210987654321
	MasterAggregatorAddress string `json:"master_aggregator_address,omitempty"`

	// Maximum batch size
	// Example: 40
	MaxBatchSize int64 `json:"max_batch_size,omitempty"`

	// Minimum batch size
	// Example: 10
	MinBatchSize int64 `json:"min_batch_size,omitempty"`

	// Chain name
	// Example: Sepolia Testnet
	// Required: true
	Name *string `json:"name"`

	// Optimal batch size for processing
	// Example: 25
	OptimalBatchSize int64 `json:"optimal_batch_size,omitempty"`

	// RPC endpoint URL
	// Example: https://eth-sepolia.g.alchemy.com/v2/xxx
	// Required: true
	RPCURL *string `json:"rpc_url"`

	// Chain short name
	// Example: sepolia
	// Required: true
	ShortName *string `json:"short_name"`
}

// Validate validates this create chain request
func (m *CreateChainRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateChainID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRPCURL(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateShortName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateChainRequest) validateChainID(formats strfmt.Registry) error {

	if err := validate.Required("chain_id", "body", m.ChainID); err != nil {
		return err
	}

	return nil
}

func (m *CreateChainRequest) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

func (m *CreateChainRequest) validateRPCURL(formats strfmt.Registry) error {

	if err := validate.Required("rpc_url", "body", m.RPCURL); err != nil {
		return err
	}

	return nil
}

func (m *CreateChainRequest) validateShortName(formats strfmt.Registry) error {

	if err := validate.Required("short_name", "body", m.ShortName); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this create chain request based on context it is used
func (m *CreateChainRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CreateChainRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreateChainRequest) UnmarshalBinary(b []byte) error {
	var res CreateChainRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
